{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","item","id","username","getUser","userId","usersFromServer","find","initialTodos","App","useState","option","setOption","setTitle","setNewTodo","action","method","onSubmit","event","preventDefault","newTodo","Math","max","type","placeholder","value","onChange","target","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26ec100d.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      { todo.user\n      && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(item => (\n        <TodoInfo\n          todo={item}\n          key={item.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [option, setOption] = useState(0);\n  const [title, setTitle] = useState('');\n  const [todos, setNewTodo] = useState(initialTodos);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newTodo: Todo = {\n      id: Math.max(...initialTodos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId: option,\n      user: getUser(option),\n    };\n\n    if (option === 0 || title === '') {\n      return;\n    }\n\n    setNewTodo([...todos, newTodo]);\n  };\n\n  const userChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(+event.target.value);\n  };\n\n  const titleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value\n      .replace(/[^a-zа-яё0-9\\s]/gi, ' ')\n      .replace(/[^a-z]/g, ''));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={titleChange}\n            />\n            {title === ''\n              && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={option}\n              onChange={userChange}\n            >\n              <option>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {option === 0\n              && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}